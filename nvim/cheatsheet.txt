## FZF
grep        | fg
fzf         | ff

## gitsigns @git
Stage hunk                               | :Gitsigns stage_hunk
Stage buffer                             | :Gitsigns stage_buffer
Stage range                              | :'<,'>Gitsigns stage_hunk
Undo stage hunk                          | :Gitsigns undo_stage_hunk
Reset hunk                               | :Gitsigns reset_hunk
Preview hunk                             | :Gitsigns preview_hunk
Reset buffer                             | :Gitsigns reset_buffer
Diff current buffer                      | :Gitsigns diffthis

## CoC
rename symbol                            | <Leader>rn
definition                               | <Leader>gd
type definition                          | <Leader>gD
declaration                              | <Leader>gdc
implementation                           | <Leader>gi
references                               | <Leader>gr
format                                   | <Leader>F
apply code action to cursor              | <Leader>ac
apply code action to whole buffer        | <Leader>as
show documentation                       | K

## fugitive @git
Browse commit history for current file     | :Git log -p -- %
Browse commit history                      | :Git log
See git blame for current file             | :Git blame
navigate to previous hunk                  | [c

## diffview @git
Open diffview for current file             | :DiffviewOpen
Open diffview for a commit hash            | :DiffviewOpen <commit>^!
Open diffview for current file             | :DiffviewFileHistory %
Next file in current diff commit           | <TAB>
Next commit                                | ]c
Prev commit                                | [c

## visual
Append to end of selected lines  | $A
Merge current line with the previous line  | J

## copilot
Accept suggestion | <C-y>


## Others
Source neovim file | :source $MYVIMRC
Change keyboard layout | <c-space>
Indent current line/block | =
Copy files to clipboard | :FZFCopy

## Tmux
Split full window split | <c-b> :splitw -f<h/v>
Swap windows | <c-b> :swap-window -s 0 -t 1
Copy text vim-like | <c-b> [ -> Space -> Enter

## Git
Git absorb | git absorb --and-rebase

## Snippets
Snippets | UltiSnipsEdit
Ultisnips | UltiSnipsEdit

## nvim
Verbose | nvim -V
Reload config | :source $MYVIMRC

## ChatGPT
<C-Enter> [Both] | Submit
<C-y> [Both] | Copy/Yank last answer
<C-o> [Both] | Toggle settings window
<Tab> [Both] | Cycle over windows
<C-f> [Chat] | Cycle over modes (center, stick to right)
<C-c> [Both] | Close chat window
<C-u> [Chat] | Scroll up chat window
<C-d> [Chat] | Scroll down chat window
<C-k> [Chat] | Copy/Yank code from last answer
<C-n> [Chat] | Start new session
<C-d> [Chat] | Draft message (create without submitting to server)
<C-r> [Chat] | Switch role (between user and assistant)
<C-s> [Both] | Toggle system message window
<C-i> [Edit Window] | Use response as input
<C-d> [Edit Window] | View diff between left and right panes and use diff-mode commands

## Iterm
C-k | Clear line to the right of cursor location
C-u | Clear line
C-w | Clear word
C-a | Move to beginning of line
C-e | Move to end of line
